<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jihai.bitfree.dao.OperateLogDAO">

    <resultMap id="operateResultMap" type="com.jihai.bitfree.entity.OperateLogDO">
        <result column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="type" property="type" />
        <result column="deleted" property="deleted" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <sql id="BASE_COLUMN">id, user_id, type, `remark`, deleted, create_time, update_time</sql>

    <insert id="insert">
        INSERT INTO operate_log (`user_id`, `type`, `remark`)
        VALUE(#{userId}, #{type}, #{remark})
    </insert>
    <select id="queryByUserIdAndType" resultType="integer">
        SELECT COUNT(*) FROM operate_log WHERE user_id = #{userId} AND `type` = #{type} AND deleted = 0
    </select>
    <select id="countRecentOpenChatLog" resultType="integer">
        SELECT COUNT(*)
        FROM operate_log
        WHERE user_id = #{userId} AND `type` = #{type}
        AND create_time &gt; DATE_SUB(CURDATE(), interval 1 day)
        AND deleted = 0
    </select>
    <select id="countLoginRecord" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM operate_log
        WHERE  user_id = #{userId}
        AND `type` = #{type}
        AND create_time &gt; #{date}
        AND deleted = 0
    </select>

    <select id="queryByUserIdAndTypeList" resultMap="operateResultMap">
        SELECT
            <include refid="BASE_COLUMN">
            </include>
        FROM operate_log
        <where>
            user_id = #{userId} AND deleted = 0
            <if test="req.typeList != null and req.typeList.size > 0">
                AND type IN
                <foreach collection="req.typeList" item="type" index="index" open="(" close=")" separator=",">
                    #{type}
                </foreach>
            </if>
            <if test="req.startTime != null and req.startTime !='' and req.endTime != null and req.endTime !=''">
                AND create_time BETWEEN #{req.startTime} AND #{req.endTime}
            </if>
        </where>
        ORDER BY create_time desc LIMIT #{start}, #{size}
    </select>

    <select id="countByUserIdAndTypeList" resultType="java.lang.Integer">
        SELECT
            count(*)
        FROM operate_log
        <where>
            user_id = #{userId} AND deleted = 0
            <if test="req.typeList != null and req.typeList.size > 0">
                AND type IN
                <foreach collection="req.typeList" item="type" index="index" open="(" close=")" separator=",">
                    #{type}
                </foreach>
            </if>
            <if test="req.startTime != null and req.startTime !='' and req.endTime != null and req.endTime !=''">
                AND create_time BETWEEN #{req.startTime} AND #{req.endTime}
            </if>
        </where>
    </select>
</mapper>